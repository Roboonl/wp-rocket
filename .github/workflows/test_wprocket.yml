name: WPRocket Test

on:
  pull_request:
    branches:
      - master
      - develop
      - branch-*
      - feature/*

jobs:
  run:
    runs-on: ${{ matrix.operating-system }}
    
    strategy:
      fail-fast: false
      matrix:
        operating-system: [ubuntu-latest]
        php-versions: ['7.2', '7.3', '7.4']
        wp-versions: ['latest']
  
    name: WP ${{ matrix.wp-versions }} with PHP ${{ matrix.php-versions }} on ${{ matrix.operating-system }}.
    
    env:
      ROCKETCDN_EMAIL: ${{ secrets.ROCKETCDN_EMAIL }}
      ROCKETCDN_PWD: ${{ secrets.ROCKETCDN_PWD }}
      ROCKETCDN_TOKEN: ${{ secrets.ROCKETCDN_TOKEN }}
      ROCKETCDN_URL: ${{ secrets.ROCKETCDN_URL }}
      ROCKETCDN_WEBSITE_ID: ${{ secrets.ROCKETCDN_WEBSITE_ID }}
      ROCKET_EMAIL: ${{ secrets.ROCKET_EMAIL }}
      ROCKET_KEY: ${{ secrets.ROCKET_KEY }}

    services:
      mysql:
        image: mysql:5.7
        env:
          MYSQL_USER: wordpress
          MYSQL_PASSWORD: w0rdpr355
        ports:
          - 3306
        # Extra MySQL options can be added here
        # options: --health-cmd="mysqladmin ping"

    steps:
    - name: Checkout
      uses: actions/checkout@v2

    - name: Setup PHP
      uses: shivammathur/setup-php@v2
      with:
        php-version: ${{ matrix.php-versions }}
        extensions: pdo
        coverage: none  # XDebug can be enabled here 'coverage: xdebug'
        tools: composer:v1, phpunit
    
    - name: Start mysql service
      run: sudo /etc/init.d/mysql start
    
    - name: Setup problem matchers for PHP
      run: echo "::add-matcher::${{ runner.tool_cache }}/php.json"

    - name: Setup problem matchers for PHPUnit
      run: echo "::add-matcher::${{ runner.tool_cache }}/phpunit.json"

    - name: Get composer cache directory
      id: composercache
      run: echo "::set-output name=dir::$(composer config cache-files-dir)"
    
    - name: Cache dependencies
      uses: actions/cache@v2
      with:
        path: ${{ steps.composercache.outputs.dir }}
        key: ${{ runner.os }}-composer-${{ hashFiles('**/composer.json') }}
        restore-keys: ${{ runner.os }}-composer-
    
    - name: Install dependencies
      run: composer install --prefer-dist --no-interaction --no-scripts
    
    - name: Test stuff
      run: |
        ps -fea
        netstat -ntpl
        whoami
        mysql -u wordpress -pw0rdpr355 -e 'show databases'    

    - name: Install tests
      run: bash bin/install-wp-tests.sh wordpress_test wordpress w0rdpr355 127.0.0.1:${{ job.services.mysql.ports[3306] }} $WP_VERSION

    - name: Test
      run: composer run-tests
